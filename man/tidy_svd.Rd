% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list-svd-tidiers.r
\name{tidy_svd}
\alias{tidy_svd}
\alias{svd_tidiers}
\title{Tidy a(n) svd object masquerading as list}
\usage{
tidy_svd(x, matrix = "u", ...)
}
\arguments{
\item{x}{A list with components \code{u}, \code{d}, \code{v} returned by \code{\link[base:svd]{base::svd()}}.}

\item{matrix}{Character specifying which component of the PCA should be
tidied.
\itemize{
\item \code{"u"}: returns information about the left singular vectors.
\item \code{"v"}: returns information about the right singular vectors.
\item \code{"d"}: returns information about the basis vectors and singular values.
}}

\item{...}{Additional arguments. Not used. Needed to match generic
signature only. \strong{Cautionary note:} Misspelled arguments will be
absorbed in \code{...}, where they will be ignored. If the misspelled
argument has a default value, the default value will be used.}
}
\value{
A \link[tibble:tibble]{tibble::tibble} with columns depending on the component of the SVD
being tidied.

If \code{matrix} is \code{"u"} (respectively, \code{"v"}), each row in the tidied output
corresponds to the left (respectively, right) singular vectors. The columns
are:

\item{\code{row}}{Row (respectively, column) in the original data.}
\item{\code{SV}}{Integer indicating a singular vector.}
\item{\code{value}}{The coordinate of this row in the singular vector.}

If \code{matrix} is \code{"d"}, each row contains information for one basis vector.
The columns are:

\item{\code{SV}}{An integer vector indicating the basis vector.}
\item{\code{std.dev}}{Singular value; the standard deviation along this basis
vector.}
\item{\code{percent}}{Fraction of variation along this basis vector
(a numeric value between 0 and 1).}
\item{\code{cumulative}}{Cumulative fraction of variation along basis vectors up
to this one (a numeric value between 0 and 1).}
}
\description{
Broom tidies a number of lists that are effectively S3
objects without a class attribute. For example, \code{\link[stats:optim]{stats::optim()}},
\link[base:svd]{svd()} and \code{\link[interp:interp]{interp::interp()}} produce consistent output, but
because they do not have a class attribute, they cannot be handled by S3
dispatch.

These functions look at the elements of a list and determine if there is
an appropriate tidying method to apply to the list. Those tidiers are
implemented as functions of the form \verb{tidy_<function>()} or
\verb{glance_<function>()} and are not exported (but they are documented!).

If no appropriate tidying method is found, they throw an error.
}
\examples{
\dontshow{if (rlang::is_installed("modeldata")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

library(modeldata)
data(hpc_data)

mat <- scale(as.matrix(hpc_data[, 2:5]))
s <- svd(mat)

tidy_u <- tidy(s, matrix = "u")
tidy_u

tidy_d <- tidy(s, matrix = "d")
tidy_d

tidy_v <- tidy(s, matrix = "v")
tidy_v
\dontshow{\}) # examplesIf}
\dontshow{if (rlang::is_installed("ggplot2")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}

library(dplyr)
library(ggplot2)

ggplot(tidy_d, aes(SV, percent)) +
  geom_point() +
  ylab("\% of variance explained")

tidy_u \%>\%
  mutate(class = hpc_data$class[row]) \%>\%
  ggplot(aes(class, value)) +
  geom_boxplot() +
  facet_wrap(~SV, scale = "free_y")
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[generics:tidy]{generics::tidy()}}, \code{\link[base:svd]{base::svd()}}

Other svd tidiers: 
\code{\link{tidy_irlba}()}

Other list tidiers: 
\code{\link{glance_cmdscale}()},
\code{\link{glance_optim}()},
\code{\link{list_tidiers}},
\code{\link{tidy_cancor}()},
\code{\link{tidy_cmdscale}()},
\code{\link{tidy_irlba}()},
\code{\link{tidy_optim}()},
\code{\link{tidy_xyz}()}
}
\concept{list tidiers}
\concept{svd tidiers}
